openapi: 3.0.1
info:
  title: HFS 3 HTTP API
  description: ''
  version: 1.0.0
tags:
  - name: Front-end
paths:
  /~/api/get_file_list:
    get:
      summary: List files
      deprecated: false
      description: returns all files of a specified folder
      tags:
        - Front-end
      parameters:
        - name: uri
          in: query
          description: path to the folder containing the files. Default is `/`
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: number of records to skip
          required: false
          schema:
            type: number
        - name: limit
          in: query
          description: max number of records to return
          required: false
          schema:
            type: number
        - name: search
          in: query
          description: search for files with the specified pattern, also in subfolders.
          required: false
          schema:
            type: string
        - name: c
          in: query
          description: >-
            request separated `c` and `m` properties in entries. Pass any string
            to turn it on. By default only `m` is provided, and when missing it
            is copied from `c`.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: all files accordingly to the specified parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      security: []
  /{folder}:
    post:
      summary: 'Upload '
      deprecated: false
      description: Equivalent to curl -F upload=@FILE FOLDER/
      tags:
        - Front-end
      parameters:
        - name: folder
          in: path
          description: The folder path where the file will be uploaded
          required: true
          example: ''
          schema:
            type: string
        - name: x-hfs-anti-csrf
          in: header
          description: necessary only for POST requests
          example: '1'
          schema:
            type: string
            default: '1'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: The file to upload.
                  format: binary
            encoding:
              file:
                contentType: application/octet-stream
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security: []
  /~/api/add_account:
    post:
      summary: add account
      deprecated: false
      description: ''
      tags: []
      parameters:
        - name: x-hfs-anti-csrf
          in: header
          description: necessary only for POST requests
          example: '1'
          schema:
            type: string
            default: '1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                belongs:
                  type: array
                  items:
                    type: string
                ignore_limits:
                  type: boolean
                disable_password_change:
                  type: boolean
                admin:
                  type: boolean
                redirect:
                  type: string
                disabled:
                  type: boolean
                expire: &ref_1
                  $ref: '#/components/schemas/Date'
                days_to_live:
                  type: number
                overwrite:
                  type: boolean
              required:
                - username
            example:
              username: john
              password: betterUseLongPasswords
              overwrite: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security: []
  /~/api/get_config:
    get:
      summary: get config
      deprecated: false
      description: ''
      tags: []
      parameters:
        - name: only
          in: query
          description: to get only specific keys from the config
          required: false
          schema:
            type: array
            items:
              type: string
        - name: omit
          in: query
          description: to get all but the specified keys from the config
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security: []
  /{folder}/{file}:
    put:
      summary: Upload
      deprecated: false
      description: Equivalent to curl -T FILE URL/
      tags:
        - Front-end
      parameters:
        - name: folder
          in: path
          description: The folder path where the file will be uploaded
          required: true
          example: ''
          schema:
            type: string
        - name: file
          in: path
          description: The uploaded file name
          required: true
          example: ''
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security: []
  /~/api/set_account:
    post:
      summary: update account
      deprecated: false
      description: ''
      tags: []
      parameters:
        - name: x-hfs-anti-csrf
          in: header
          description: necessary only for POST requests
          example: '1'
          schema:
            type: string
            default: '1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                changes: &ref_0
                  $ref: '#/components/schemas/Account'
              required:
                - username
                - changes
            example:
              username: john
              password: betterUseLongPasswords
              overwrite: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security: []
  /~/api/set_config:
    post:
      summary: set config
      deprecated: false
      description: ''
      tags: []
      parameters:
        - name: x-hfs-anti-csrf
          in: header
          description: necessary only for POST requests
          example: '1'
          schema:
            type: string
            default: '1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                values:
                  type: object
                  properties: {}
                  required:
                    - 01HVXZ10SH9AHVGST5XV79TK5A
                  description: all keys are the defined in config.md file
              required:
                - values
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security: []
  /~/api/del_account:
    post:
      summary: delete account
      deprecated: false
      description: ''
      tags: []
      parameters:
        - name: x-hfs-anti-csrf
          in: header
          description: necessary only for POST requests
          example: '1'
          schema:
            type: string
            default: '1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
                - username
            example:
              username: john
              password: betterUseLongPasswords
              overwrite: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security: []
  /~/api/get_accounts:
    get:
      summary: list accounts
      deprecated: false
      description: ''
      tags: []
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items: *ref_0
                required:
                  - list
      security: []
  /~/api/get_usernames:
    get:
      summary: list usernames
      deprecated: false
      description: ''
      tags: []
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: string
                required:
                  - list
      security: []
  /~/api/get_admins:
    get:
      summary: list admins
      deprecated: false
      description: ''
      tags: []
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: string
                      description: username
                required:
                  - list
      security: []
  /~/api/get_account:
    get:
      summary: get account
      deprecated: false
      description: you can also call this with POST
      tags: []
      parameters:
        - name: username
          in: query
          description: ''
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: *ref_0
      security: []
components:
  schemas:
    Date:
      type: string
      format: date-time
    Account:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        belongs:
          type: array
          items:
            type: string
        ignore_limits:
          type: boolean
        disable_password_change:
          type: boolean
        admin:
          type: boolean
        redirect:
          type: string
        disabled:
          type: boolean
        expire: *ref_1
        days_to_live:
          type: number
      required:
        - username
    folder_body:
      type: object
      properties:
        file:
          type: string
          description: The file to upload.
          format: binary
    inline_response_200:
      type: object
      properties:
        can_archive:
          type: boolean
          description: if you can download this folder as zip
        can_upload:
          type: boolean
          description: if you can upload in this folder
        can_delete:
          type: boolean
          description: if you can delete items in this folder
        can_comment:
          type: boolean
          description: if you can coment items in this folder
        list:
          type: array
          description: entries from this folder
          items:
            $ref: '#/components/schemas/DirEntry'
    DirEntry:
      required:
        - 'n'
      type: object
      properties:
        'n':
          type: string
          description: name of the entry. Can be a relative path in case you used `search`.
        c:
          type: string
          description: creation time
          format: date-time
        m:
          type: string
          description: modification time
          format: date-time
        s:
          type: number
          description: size, in bytes
        p:
          pattern: '[rR]?[lL]?d?'
          type: string
          description: |
            permissions, only when are different from the parent folder.
            Meaning of each character:
            - r: cannot be downloaded
            - R: can be downloaded only with other credentials
            - l: folder cannot be listed
            - L: folder can be listed only with other credetnials
            - d: can be deleted
        comment:
          type: string
          description: assigned comment
      description: >-
        front-end list item format. Common properties are kept short to optimize
        space.
  securitySchemes: {}
servers: []
